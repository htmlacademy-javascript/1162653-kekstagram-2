import { getRandomInteger, getRandomArrayElement } from './util.js';

const DESCRIPTIONS = [
  'Эта улыбка дарит тепло в самый холодный день',
  'Разочарование на грани!',
  'Восторг от заката, который захватывает дух',
  'Никогда не было так грустно смотреть на что-то такое прекрасное',
  'Нежность, скрытая в одном взгляде',
  'Как же приятно снова увидеть этих людей',
  'Злость кипит внутри, но выражена молчанием',
  'Какое облегчение наконец-то сделать этот шаг',
  'Такая красота не может оставить равнодушным',
  'Столько сил потрачено впустую... разочарование во всем',
  'Нет ничего лучше, чем моменты, проведённые вместе',
  'Восхищение этим мгновением надолго останется в сердце',
  'Какое спокойствие приносит этот вид',
  'Гнев и беспомощность в каждом движении',
  'Свет этой улыбки согревает даже в самый тёмный день',
  'Какое облегчение наконец-то завершить это дело',
  'Взрыв эмоций, который невозможно сдержать!',
  'Как же обидно, что все пошло не так',
  'Так просто, но в этом так много счастья',
  'Столько ярких красок — глаза просто не верят.',
  'Что за глупая ошибка, она рушит всё!',
  'Каждая деталь этой фотографии полна любви',
  'Это чувство свободы невозможно передать словами',
  'Как же раздражает это выражение лица!',
  'Каждое мгновение здесь дышит вдохновением',
];

const MESSAGES = [
  'Всё отлично!',
  'В целом всё неплохо. Но не всё.',
  'Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.',
  'Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.',
  'Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.',
  'Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!',
  'Какое потрясающее фото, просто восторг!',
  'Не могу перестать улыбаться, глядя на это!',
  'Цвета просто невероятные, глаз радуется!',
  'В этом кадре столько тепла и света, просто чудо!',
  'Великолепная работа, каждое фото лучше предыдущего!',
  'Как-то скучновато получилось, ожидала большего.',
  'Фото не впечатляет, слишком банально.',
  'Цвета какие-то тусклые, даже смотреть не хочется.',
  'Вроде неплохо, но композиция неудачная.',
  'Что-то не цепляет, не хватает эмоциональности.',
];

const NAMES = [
  'Фродо Торбинс',
  'Келвин Бертон',
  'Уинстон Смитов',
  'Дарт Ренов',
  'Гэндальф Серебрянов',
  'Маршалл Эриксонович',
  'Тед Мосбионов',
  'Самвел Гэмджиев',
  'Джонатан Тардисов',
  'Саурон Мрачный',
  'Бен Кенобианов',
  'Сириус Чернов',
  'Виктор Таргарянов',
  'Дункан Идаркович',
  'Шадоу Мунович',
  'Эйлин Вейдерова',
];

const PHOTO_COUNT = 25;

const PhotoLikes = {
  MIN: 15,
  MAX: 200,
};

const AvatarPath = {
  MIN: 1,
  MAX: 6,
};

const CommentsAmount = {
  MIN: 0,
  MAX: 30,
};

const PhrasesInComment = {
  MIN: 1,
  MAX: 2,
};

// Функция для получения одного или двух случайных сообщений
const getRandomMessage = () => {
  const messageCount = getRandomInteger(PhrasesInComment.MIN, PhrasesInComment.MAX);
  const messages = [];
  for (let i = 0; i < messageCount; i++) {
    messages.push(getRandomArrayElement(MESSAGES));
  }
  return messages.join(' ');
};

// Функция для получения случайного уникального числа
const getRandomUniqueNumbers = (count, max) => {
  const uniqueNumbers = new Set();
  while (uniqueNumbers.size < count) {
    uniqueNumbers.add(getRandomInteger(1, max));
  }
  return Array.from(uniqueNumbers);
};

const randomIds = getRandomUniqueNumbers(PHOTO_COUNT, PHOTO_COUNT);

// Счетчик для уникальных ID
let commentIdCounter = 1;
let photoIdCounter = 0;

// Функция создания случайного комментария
const createComment = () => {
  const commentId = commentIdCounter++; // Присваиваем текущий ID и увеличиваем счетчик
  return {
    id: commentId,
    avatar: `img/avatar-${getRandomInteger(AvatarPath.MIN, AvatarPath.MAX)}.svg`, // Случайный аватар от 1 до 6
    message: getRandomMessage(), // Получаем случайное сообщение
    name: getRandomArrayElement(NAMES), // Случайное имя из списка
  };
};

// Функция создания объекта фотографии
const createPhoto = () => {
  const id = randomIds[photoIdCounter++];
  return {
    id, // Уникальный ID для фотографии
    url: `photos/${id}.jpg`, // Ссылка на фотографию
    description: getRandomArrayElement(DESCRIPTIONS), // Случайное описание
    likes: getRandomInteger(PhotoLikes.MIN, PhotoLikes.MAX), // Случайное количество лайков
    comments: Array.from({ length: getRandomInteger(CommentsAmount.MIN, CommentsAmount.MAX) }, createComment), // Генерация случайных комментариев
  };
};

// Генерация массива из 25 объектов фотографии
const generatePhotos = () => Array.from({ length: PHOTO_COUNT }, createPhoto);

export { generatePhotos };
